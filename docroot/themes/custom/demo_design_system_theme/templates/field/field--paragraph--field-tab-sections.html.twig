{#
/**
 * @file
 * Theme override for a field.
 *
 * To override output, copy the "field.html.twig" from the templates directory
 * to your theme's directory and customize it, just like customizing other
 * Drupal templates such as page.html.twig or node.html.twig.
 *
 * Instead of overriding the theming for all fields, you can also just override
 * theming for a subset of fields using
 * @link themeable Theme hook suggestions. @endlink For example,
 * here are some theme hook suggestions that can be used for a field_foo field
 * on an article node type:
 * - field--node--field-foo--article.html.twig
 * - field--node--field-foo.html.twig
 * - field--node--article.html.twig
 * - field--field-foo.html.twig
 * - field--text-with-summary.html.twig
 * - field.html.twig
 *
 * Available variables:
 * - attributes: HTML attributes for the containing element.
 * - label_hidden: Whether to show the field label or not.
 * - title_attributes: HTML attributes for the title.
 * - label: The label for the field.
 * - multiple: TRUE if a field can contain multiple items.
 * - items: List of all the field items. Each item contains:
 *   - attributes: List of HTML attributes for each item.
 *   - content: The field item's content.
 * - entity_type: The entity type to which the field belongs.
 * - field_name: The name of the field.
 * - field_type: The type of the field.
 * - label_display: The display settings for the label.
 *
 *
 * @see template_preprocess_field()
 */
#}

{% set paragraph_id = element['#object'].id.value %}
{% set mobile_display_type = element['#object'].field_mobile_display_type.value %}

{% set classes = [
  'field',
  'field-name-' ~ field_name|clean_class,
  'field-type-' ~ field_type|clean_class,
  'field-label-' ~ label_display,
  'nav',
  'nav-tabs',
] %}

<div class="custom--tab-sections pt-3 pb-3">
  <ul {{ attributes.addClass(classes).setAttribute('id', 'tabs').setAttribute('role', 'tablist') }}>
    {% for item in items %}
      {% set tab_index = loop.index %}
      {% set tab_id = 'tab-' ~ paragraph_id ~ '-' ~ loop.index %}
      {% set href = 'pane-' ~ paragraph_id ~ '-' ~ loop.index %}
      <li{{ item.attributes.addClass('nav-item') }}>
        {{ item.content|merge({'#data-tab-index': tab_index,'#data-type': 'buttons', '#data-tab-id': tab_id, '#data-href': href, '#data-mobile-display-type': mobile_display_type}) }}
      </li>
    {% endfor %}
  </ul>

  <div id="content-{{ paragraph_id }}" class="tab-content" role="tablist">
    {% for item in items %}
      {% set tab_index = loop.index %}
      {% set tab_id = 'tab-' ~ paragraph_id ~ '-' ~ loop.index %}
      {% set href = 'pane-' ~ paragraph_id ~ '-' ~ loop.index %}
      {% set accordion_id = 'accordion-id-' ~ paragraph_id ~ '-' ~ loop.index %}
      {% set accordion_href = 'accordion-' ~ paragraph_id ~ '-' ~ loop.index %}
      <div id="{{ href }}" class="card tab-pane {{ loop.index == 1 ? 'active' : '' }}" role="tabpanel" aria-labelledby="{{ tab_id }}">
        {{ item.content|merge({'#data-tab-index': tab_index, '#data-type': 'content', '#data-tab-id': tab_id, '#data-href': href, '#data-parent-id': paragraph_id, '#data-accordion-id': accordion_id, '#data-accordion-href': accordion_href, '#data-mobile-display-type': mobile_display_type}) }}
      </div>
    {% endfor %}
  </div>
</div>
