{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}

{% set settings_custom_id = paragraph.getBehaviorSetting('custom_paragraph_behaviors_paragraph_custom_id_classes', 'custom_id') %}
{% set settings_custom_classes = paragraph.getBehaviorSetting('custom_paragraph_behaviors_paragraph_custom_id_classes', 'custom_classes') %}
{% set custom_id = settings_custom_id ? settings_custom_id : 'paragraph-' ~ paragraph.id() %}
{% set classes = [
  'paragraph',
  'paragraph--type--' ~ paragraph.bundle|clean_class,
  view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
  settings_custom_classes ? settings_custom_classes,
] %}

{% set tab_index = elements['#data-tab-index'] %}
{% set type = elements['#data-type'] %}
{% set tab_id = elements['#data-tab-id'] %}
{% set href = elements['#data-href'] %}
{% set parent_id = elements['#data-parent-id'] %}
{% set accordion_id = elements['#data-accordion-id'] %}
{% set accordion_href = elements['#data-accordion-href'] %}
{% set mobile_display_type = elements['#data-mobile-display-type'] %}

{% block paragraph %}
  {% if type == 'buttons' %}
    <a id="{{ tab_id }}" href="#{{ href }}" class="nav-link {{ tab_index == 1 ? 'active' : '' }} analytics--p-switch-tabs" data-analytics-id="{{ ('tab-btn-' ~ href)|data_analytics_id }}" data-toggle="tab" role="tab">
      {% if content.field_default_icon|render|length > 0 %}
        <span class="custom--tab-icon">
          {{ content.field_default_icon }}
          {{ content.field_hover_icon }}
        </span>
      {% endif %}
      {{ content.field_tab_title }}
    </a>
  {% else %}
    <div{{ attributes.addClass(classes).setAttribute('id', custom_id) }}>
      {% block content %}
        <div class="card-header" role="tab" id="{{ accordion_id }}">
          <h5 class="mb-0">
            <a data-toggle="collapse" href="#{{ accordion_href }}" data-parent="#content-{{ parent_id }}" aria-expanded="true"
               aria-controls="{{ accordion_href }}" class="nav-link custom--accordion-link pl-0 pr-0 {{ (mobile_display_type == 'accordion1' and tab_index == 1) ? 'active' : '' }} analytics--p-switch-tabs" data-analytics-id="{{ ('accordion-btn-' ~ href)|data_analytics_id }}">
              <span class="custom--tab-icon">
                {{ content.field_default_icon }}
                {{ content.field_hover_icon }}
              </span>
              {{ content.field_tab_title }}
            </a>
          </h5>
        </div>
        <div id="{{ accordion_href }}" class="collapse {{ (mobile_display_type == 'accordion1' and tab_index == 1) ? 'show' : '' }}" role="tabpanel" aria-labelledby="{{ accordion_id }}">
          <div class="card-body pt-3">
            {{ content.field_tab_content }}
          </div>
        </div>
      {% endblock %}
    </div>
  {% endif %}
{% endblock paragraph %}
