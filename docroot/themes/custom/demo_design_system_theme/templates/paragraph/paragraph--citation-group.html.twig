{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{# In a Twig template we attach the library. #}
{{ attach_library('demo_design_system_theme/paragraph.citation-group') }}

{% set settings_custom_classes = paragraph.getBehaviorSetting('custom_paragraph_behaviors_paragraph_custom_id_classes', 'custom_classes') %}
{%
  set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    settings_custom_classes ? settings_custom_classes,
  ]
%}
{% set my_attribute = create_attribute() %}
{% set settings_collapsed = content.field_ods_collapsed|render|striptags|trim|lower %}
{% set collapsed = settings_collapsed == 'true' ? 'collapse' %}

{% block paragraph %}
  <div{{ attributes.addClass(classes).setAttribute('id', 'paragraph-' ~ paragraph.id()) }}>
    {% if settings_collapsed == 'true' %}
      <button type="button" class="btn collapsed analytics--p-reference-expand" data-toggle="collapse" data-target="#paragraph-item-{{ paragraph.id() }}" data-analytics-id="{{ ('item-' ~ paragraph.id())|data_analytics_id }}">
        {{ 'References'|t }}
        <i class="fa fa-chevron-down" aria-hidden="true"></i>
      </button>
    {% endif %}
    {% block content %}
      <div{{ my_attribute.addClass(collapsed).setAttribute('id', 'paragraph-item-' ~ paragraph.id()) }}>
        <hr>
        {{ content|without('field_ods_collapsed') }}
        <hr>
      </div>
    {% endblock %}
  </div>
{% endblock paragraph %}
